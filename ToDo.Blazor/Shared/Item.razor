@inject HttpClient Http

<EditForm Model="@ToDoItem" OnValidSubmit="UpdateItem">
  <DataAnnotationsValidator />
  <div class="py-2">
    <div class="form-row" style="place-items: center">
      <div class="col-1">
        <InputCheckbox @bind-Value="@ToDoItem.IsCompleted" />
      </div>

      <div class="col-10">
        <div class="row">
          <div class="col">
            <InputText class="form-control"
                       placeholder="Title"
                       @bind-Value="@ToDoItem.Title" />
            <ValidationMessage For="@(() => ToDoItem.Title)" />
          </div>
        </div>
        <div class="row">
          <div class="col">
            <InputTextArea rows="3"
                           class="form-control"
                           placeholder="Description"
                           @bind-Value="@ToDoItem.Description" />
          </div>
        </div>
      </div>

      <div class="col-1">
        <button class="close" @onclick="RemoveItem" type="button">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
    </div>
  </div>
</EditForm>

@code {
  [Parameter]
  public ToDoItem ToDoItem { get; set; }

  [Parameter]
  public EventCallback OnRemoveClick { get; set; }

  private async Task UpdateItem()
  {
    var result = await Http.PutAsJsonAsync<ToDoItem>($"https://localhost:44389/api/lists/{ToDoItem.ToDoListId}/items/{ToDoItem.Id}", ToDoItem);
  }

  private async Task RemoveItem()
  {
    var result = await Http.DeleteAsync($"https://localhost:44389/api/lists/{ToDoItem.ToDoListId}/items/{ToDoItem.Id}");
    if (result.IsSuccessStatusCode)
    {
      await OnRemoveClick.InvokeAsync();
    }
  }
}
